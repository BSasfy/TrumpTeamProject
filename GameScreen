<html>

	<head>
		<!-- Web page title -->
    	<title>Top Trumps</title>
    	
    	<!-- Import JQuery, as it provides functions you will probably find useful (see https://jquery.com/) -->
    	<script src="https://code.jquery.com/jquery-2.1.1.js"></script>
    	<script src="https://code.jquery.com/ui/1.11.1/jquery-ui.js"></script>
    	<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/flick/jquery-ui.css">

		<!-- Optional Styling of the Website, for the demo I used Bootstrap (see https://getbootstrap.com/docs/4.0/getting-started/introduction/) -->
		<link rel="stylesheet" href="http://dcs.gla.ac.uk/~richardm/TREC_IS/bootstrap.min.css">
    	<script src="http://dcs.gla.ac.uk/~richardm/vex.combined.min.js"></script>
    	<script>vex.defaultOptions.className = 'vex-theme-os';</script>
    	<link rel="stylesheet" href="http://dcs.gla.ac.uk/~richardm/assets/stylesheets/vex.css"/>
    	<link rel="stylesheet" href="http://dcs.gla.ac.uk/~richardm/assets/stylesheets/vex-theme-os.css"/>
    	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

	</head>
	
	<body style="background-color:lightgrey;">
	</body>

    <body onload="initalize()"> <!-- Call the initalize method when the page loads -->
    	
    	<div class="container">

			<!-- Add your HTML Here -->
		
		</div>
		
		<script type="text/javascript">
		
			// Method that is called on page load
			function initalize() {
			
				// --------------------------------------------------------------------------
				// You can call other methods you want to run when the page first loads here
				// --------------------------------------------------------------------------
				
				// For example, lets call our sample methods
				helloJSONList();
				helloWord("Student");
				deckString();
				getRound();
				getHumanCard();
				getActivePlayer();
				getHumanCard2();
				getWinner();
				getAI1Card();
				getAI2Card();
				getAI3Card();
				getAI4Card();
				
				
			}
			
			// -----------------------------------------
			// Add your other Javascript methods Here
			// -----------------------------------------
		
			// This is a reusable method for creating a CORS request. Do not edit this.
			function createCORSRequest(method, url) {
  				var xhr = new XMLHttpRequest();
  				if ("withCredentials" in xhr) {

    				// Check if the XMLHttpRequest object has a "withCredentials" property.
    				// "withCredentials" only exists on XMLHTTPRequest2 objects.
    				xhr.open(method, url, true);

  				} else if (typeof XDomainRequest != "undefined") {

    				// Otherwise, check if XDomainRequest.
    				// XDomainRequest only exists in IE, and is IE's way of making CORS requests.
    				xhr = new XDomainRequest();
    				xhr.open(method, url);

 				 } else {

    				// Otherwise, CORS is not supported by the browser.
    				xhr = null;

  				 }
  				 return xhr;
			}
		
		</script>
		
		<!-- Here are examples of how to call REST API Methods -->
		<script type="text/javascript">
		
			// This calls the helloJSONList REST method from TopTrumpsRESTAPI
			function helloJSONList() {
			
				// First create a CORS request, this is the message we are going to send (a get request in this case)
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/helloJSONList"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var responseText = xhr.response; // the text of the response
					//alert(responseText); // lets produce an alert
				};
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();		
			}
			
			// This calls the helloJSONList REST method from TopTrumpsRESTAPI
			function helloWord(word) {
			
				// First create a CORS request, this is the message we are going to send (a get request in this case)
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/helloWord?Word="+word); // Request type and URL+parameters
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var responseText = xhr.response; // the text of the response
					// alert(responseText); // lets produce an alert
				};
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();		
			}
			
			
			function deckString() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/deckString"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var responseText = xhr.response; // the text of the response
					alert(responseText); // lets produce an alert
					
					var parsedDeck = JSON.parse(responseText);
					console.log(parsedDeck);
					
					
					alert(parsedDeck.fieldNames);	
					var div = document.createElement("div");
					div.innerHTML = "<div class='alert alert-primary' role='alert' onclick='alert('test')'> This is the deck </div>";
				
					document.getElementById("deckObject").appendChild(div);
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
			function getRound() {
			
				// First create a CORS request, this is the message we are going to send (a get request in this case)
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getRound"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var roundNumber = xhr.response; // the text of the response
 					document.getElementById("roundNum").innerHTML = roundNumber;
					alert(roundNumber); // lets produce an alert
				};
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();		
			}
			
			function getWinner() {
			
				// First create a CORS request, this is the message we are going to send (a get request in this case)
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getWinner"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var winner = xhr.response; // the text of the response
 					document.getElementById("winner").innerHTML = winner;
					alert(winner); // lets produce an alert
				};
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();		
			}
			
			function getHumanCard() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getHumanCard"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
 					var responseText = xhr.response; // the text of the response
					alert(responseText); // lets produce an alert
					
					var parsedCard = JSON.parse(responseText);
					console.log(parsedCard);
					
				
					alert(parsedCard);	
					var div = document.createElement("div");
					div.innerHTML = "<div class='alert alert-primary' role='alert'> This is the human card </div>";
					
					document.getElementById("humanCard").appendChild(div);
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
			function getHumanCard2() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getHumanCard"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
					var humanCard = xhr.response; // the text of the response
 					document.getElementById("humanCard2").innerHTML = humanCard;
					alert(humanCard); // lets produce an alert
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
				function getAI1() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getAI1Card"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
					var Card = xhr.response; // the text of the response
 					document.getElementById("AI1Card").innerHTML = Card;
					alert(Card); // lets produce an alert
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
				function getAI2Card() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getAI2Card"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
					var AI2Card = xhr.response; // the text of the response
 					document.getElementById("AI2Card").innerHTML = AI2Card;
					alert(AI2Card); // lets produce an alert
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
				function getAI3Card() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getAI3Card"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
					var AI3Card = xhr.response; // the text of the response
 					document.getElementById("AI3Card").innerHTML = AI3Card;
					alert(AI3Card); // lets produce an alert
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
				function getAI4Card() {
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getAI4Card"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}

				// CORS requests are Asynchronous, i.e. we do not wait for a response, instead we define an action
				// to do when the response arrives 
				xhr.onload = function(e) {
					var AI4Card = xhr.response; // the text of the response
 					document.getElementById("AI4Card").innerHTML = AI4Card;
					alert(AI4Card); // lets produce an alert
				}
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();	
			}
			
			
			function getActivePlayer() {
			
				// First create a CORS request, this is the message we are going to send (a get request in this case)
				var xhr = createCORSRequest('GET', "http://localhost:7777/toptrumps/getActivePlayer"); // Request type and URL
				
				// Message is not sent yet, but we can check that the browser supports CORS
				if (!xhr) {
  					alert("CORS not supported");
				}
				xhr.onload = function(e) {
					var activePlayer = xhr.response; // the text of the response
 					document.getElementById("actPlayer").innerHTML = activePlayer;
					alert(activePlayer); // lets produce an alert
				};
				
				// We have done everything we need to prepare the CORS request, so send it
				xhr.send();		
			}
			

		</script>
		
		
		<style>
.heading {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  background-color: purple;
  color: white;
  text-align: center;
}
</style>

<div class="heading">
  <p>Top Trumps Game</p>
</div>

<style>
.roundCaption {
  position: fixed;
  left: 0;
  top: 30;
  width: 100%;
  background-color: DeepPink;
  color: white;
  text-align: center;
}
</style>

<div class="roundCaption">
  Round <span id="roundNum"></span>
</div>

<style>
.playerCard {
  position: fixed;
  left: 0;
  top: 50;
  width: 100%;
  background-color: Pink;
  color: white;
  text-align: center;
}
</style>

<div class="playerCard">
  HumanCard: <span id="humanCard2"></span>
</div>

<style>
.AI1Card {
  position: fixed;
  left: 0;
  top: 440;
  width: 100%;
  background-color: Pink;
  color: white;
  text-align: center;
}
</style>

<div class="AI1Card">
  AI1Card: <span id="AI1Card"></span>
</div>

<style>
.AI2Card {
  position: fixed;
  left: 0;
  top: 460;
  width: 100%;
  background-color: Pink;
  color: white;
  text-align: center;
}
</style>

<div class="AI2Card">
  AI2Card: <span id="AI2Card"></span>
</div>

<style>
.AI3Card {
  position: fixed;
  left: 0;
  top: 480;
  width: 100%;
  background-color: Pink;
  color: white;
  text-align: center;
}
</style>

<div class="AI3Card">
  AI3Card: <span id="AI3Card"></span>
</div>

<style>
.AI4Card {
  position: fixed;
  left: 0;
  top: 500;
  width: 100%;
  background-color: Pink;
  color: white;
  text-align: center;
}
</style>

<div class="AI4Card">
  AI4Card: <span id="AI4Card"></span>
</div>


<style>
.winner {
  position: fixed;
  left: 0;
  top: 70;
  width: 100%;
  background-color: Red;
  color: white;
  text-align: center;
}
</style>

<div class="winner">
	Winner: <span id="winner"></span>
</div>






<div class="card-deck" style="position: fixed; left: 50; top: 100; width:80rem;">
  <div class="card bg-warning">
  	 	<div class="card-header">Active Player...</div>
  		 <div class="card-body">... is <span id="actPlayer"></span>. Category selected: 
   		 <h5 class="card-title"></h5>
      <p class="card-text"></p>
    </div>
  </div>
  <div class="card bg-success">
   <div class="card-header">You</div>
  <img class="card-img-top" src="..." alt="Card image cap">
    <div class="card-body nice">Human Card: <span id="humanCard"></span> End.
    <h5 class="card-title">Primary card title</h5>
      <p class="card-text nice"></p>
    </div>
  </div>
  <div class="card bg-danger">
   <div class="card-header">AI1</div>
  <img class="card-img-top" src="..." alt="Card image cap">
    <div class="card-body"> ...  <span id="humanCard2></span> End.
    <h5 class="card-title">.</h5>
      <p class="card-text">.</p>
    </div>
  </div>
  <div class="card bg-danger">
   <div class="card-header">AI2</div>
  <img class="card-img-top" src="..." alt="Card image cap">
    <div class="card-body">
    <h5 class="card-title">Primary card title</h5>
      <p class="card-text">Some text></p>
    </div>
  </div>
  <div class="card bg-danger">
   <div class="card-header">AI3</div>
  <img class="card-img-top" src="..." alt="Card image cap">
    <div class="card-body">
    <h5 class="card-title">Primary card title</h5>
      <p class=card-text">Some text inside the fourth card</p>
    </div>
  </div> 
   <div class="card bg-danger">
   <div class="card-header">AI4</div>
  <img class="card-img-top" src="..." alt="Card image cap">
    <div class="card-body">
    <h5 class="card-title">Primary card title</h5>
      <p class="card-text">Some text inside the fourth card</p>
    </div>
  </div> 
</div>


  
		
		</body>
</html>
