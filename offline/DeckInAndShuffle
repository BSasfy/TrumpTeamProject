/*This class takes a .txt file (located in the same directory as the project), extracts the values contained in the file, 
*via buffered reader, and creates an array that will be used as the card deck for the game.*/ 


package commandline;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class DeckInAndShuffle {

	String[] lineStrArr = new String[5];
	ArrayList<List> startDeck = new ArrayList<>(); // changed it from List<List> to ArrayList<List> so it works with
													// Dealing.
	List<String> LineStrArr = new ArrayList<>();
	IndividualCards cards;
	List card;
	String[] fieldNames;

	static FileWriter fw;
	static BufferedWriter bf;

	public void setUpDeck() throws IOException {
		fw = new FileWriter("Log.txt");
		String line;

		BufferedReader br = new BufferedReader(new FileReader("StarCitizenDeck.txt"));
		fieldNames = br.readLine().split("\\s");
		// data structure for inserting the values
		while ((line = br.readLine()) != null) {

			startDeck.add(separateDeck(line));
		}

		br.close();
		setLog("Starting deck is: ");
		addEmptyLine();
		for (int i = 0; i < startDeck.size(); i++) {
			setLog(startDeck.get(i).toString());
		}
		addLineLog();
		shuffleDeck();
		setLog("Shuffled deck is: ");
		addEmptyLine();
		for (int i = 0; i < startDeck.size(); i++) {
			setLog(startDeck.get(i).toString());
		}
	}

	public List<IndividualCards> separateDeck(String line) {
		try {
			lineStrArr = line.split("\\s");
			card = new ArrayList<>();

			card.add(lineStrArr[0]);
			card.add(Integer.parseInt(lineStrArr[1]));
			card.add(Integer.parseInt(lineStrArr[2]));
			card.add(Integer.parseInt(lineStrArr[3]));
			card.add(Integer.parseInt(lineStrArr[4]));
			card.add(Integer.parseInt(lineStrArr[5]));

		} catch (Exception e) {

		}
		return card;

	}

	public void shuffleDeck() {

		Collections.shuffle(startDeck);

	}

	public ArrayList getStartDeck() {

		return startDeck;
	}

	public String[] getFieldNames() {
		return fieldNames;
	}

	// method writes given text to file
	public void setLog(String text) {
		TopTrumpsCLIApplication tt = new TopTrumpsCLIApplication();
		if (tt.getLogStatus() == true) {
			try {
				fw = new FileWriter("Log.txt", true);
				bf = new BufferedWriter(fw);
				bf.write(text);
				bf.newLine();
				bf.flush();
				bf.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	// method adds an extra line to the log document
	public static void addLineLog() {
		try {
			fw = new FileWriter("Log.txt", true);
			bf = new BufferedWriter(fw);
			bf.write("---------------------------------------------------------------");
			bf.newLine();
			bf.flush();
			bf.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void addEmptyLine() {
		try {
			fw = new FileWriter("Log.txt", true);
			bf = new BufferedWriter(fw);
			bf.newLine();
			bf.newLine();
			bf.flush();
			bf.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
