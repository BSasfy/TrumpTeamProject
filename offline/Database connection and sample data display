package commandline;
//package commandline;

import java.sql.*;

public class Database {
	
	int gameRecord,humanWinRecord,aiWinRecord,averageDraws,longestGame;
	int gameRecord1=0;
	int humanWinRecord1=0;
	int aiWinRecord1=0;
	int averageDraws1=0;
	int longestGame1=0;
	String nog="",nhw="",naw="",anod="",lg="";
	public Database() {
		// TODO Auto-generated constructor stub
	}

	public void LoadDatabase() {
		
		try {
			Connection connection = null;
			try {
				Class.forName("org.postgresql.Driver");
			} catch (ClassNotFoundException e) {
				System.out.println("Could not find JDBC Driver");
				e.printStackTrace();
				return;
			}

			try {
				Class.forName("org.postgresql.Driver");
				connection = DriverManager.getConnection("jdbc:postgresql://yacata.dcs.gla.ac.uk:5432/", "m_18_2411521p","2411521p"); 
			} catch (Exception e) {
				System.out.println("Could not load class" + "org.postgresql.Driver");
				e.printStackTrace();
			}
			if (connection != null) {
				try {
					Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
					ResultSet result = statement.executeQuery("SELECT * FROM GAMESTATISTICS");
					result.afterLast();
					if(result.previous()) 
					{
						gameRecord = result.getInt("numberofgames");
						humanWinRecord= result.getInt("numberhumanwins");
						aiWinRecord=result.getInt("numberaiwins");
						averageDraws=result.getInt("averagenumberdraws");
						longestGame=result.getInt("longestgame");
						if(longestGame1<longestGame)
						{
							longestGame1=longestGame;
						}
					}
					String GR=Integer.toString(gameRecord+gameRecord1);
					String HW=Integer.toString(humanWinRecord+humanWinRecord1);
					String AW=Integer.toString(aiWinRecord+aiWinRecord1);
					String AD=Integer.toString(averageDraws+averageDraws1);
					String insert = "INSERT INTO GAMESTATISTICS values("+GR+","+HW+","+AW+","+AD+","+longestGame1+ ")";
					statement.executeUpdate(insert);
					System.out.println("Statement successfully inserted");
					statement.close();
					
				} catch (SQLException e) {
					e.printStackTrace();
				}

			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public void DisplayDataBase()
	{
		try 
		{
			Connection connection = null;
			try 
			{
				Class.forName("org.postgresql.Driver");
			} 
			catch (ClassNotFoundException e) 
			{
				System.out.println("Could not find JDBC Driver");
				e.printStackTrace();
				return;
			}

			try {
				Class.forName("org.postgresql.Driver");
				connection = DriverManager.getConnection("jdbc:postgresql://yacata.dcs.gla.ac.uk:5432/", "m_18_2411521p","2411521p"); 
				} 
			catch (Exception e)
			{
				System.out.println("Could not load class" + "org.postgresql.Driver");
				e.printStackTrace();
			}
			if (connection != null)
			{
				try {
					Statement statement = connection.createStatement();
					ResultSet result = statement.executeQuery("SELECT * FROM GAMESTATISTICS");
					while (result.next())
					{
						System.out.println("Game Statistics:");
						//System.out.println("Number oif games:"+result.getInt("numberofgames"));
						nog=" Number of Games: " + result.getInt("numberofgames");
						nhw= "\n Number of Human Wins: " + result.getInt("numberhumanwins");
						naw= "\n Number of AI Wins: " + result.getInt("numberaiwins");
						anod= "\n Average number of Draws: " + result.getInt("averagenumberdraws");
						lg= "\n Longest Game: " + result.getInt("longestgame");
						System.out.println(nog+nhw+naw+anod+lg);
						System.out.println();
					}
					statement.close();
				}
					catch (SQLException e) 
				{
						e.printStackTrace();
				}
		}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		
	}
	
	void setGameRecord(int gr) {
		gameRecord1 = gr;
	}
	void sethumanWinRecord(int hwr) {
		humanWinRecord1 = hwr;
	}
	void setaiWinRecord(int awr) {
		aiWinRecord1 = awr;
	}
	void setaverageDraws(int ad) {
		averageDraws1 = ad;
	}
	void setlongestGame(int lg) {
		longestGame1 = lg;
	}
	
	public String GetNumberOfGames()
	{
		
		return nog;
	}
	public String GetHumanWins()
	{
		
		return nhw;
	}
	
	public String GetAIWins()
	{
		
		return naw;
	}
	public String GetAverageNumberOfDraws()
	{
		
		return anod;
	}
	
	public String GetLongestGame()
	{
		
		return lg;
	}
}
